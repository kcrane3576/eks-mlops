name: Terraform Destroy

on:
  workflow_dispatch:
    inputs:
      confirm:
        description: "Type 'destroy' to confirm"
        required: true

jobs:
  terraform:
    if: >
      github.event.inputs.confirm == 'destroy' &&
      github.repository == vars.REPO_CAN_RUN_CI &&
      github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: terraform/envs/dev
    env:
      TF_VAR_environment: ${{ vars.TF_VAR_ENVIRONMENT }}
      TF_VAR_repo_name: ${{ vars.TF_VAR_REPO_NAME }}
      TF_VAR_enable_vpc_flow_logs: ${{ secrets.TF_VAR_ENABLE_VPC_FLOW_LOGS }}
      TF_VAR_tags: ${{ secrets.TF_VAR_TAGS }}

      TF_VAR_region: ${{ secrets[format('TF_VAR_{0}_REGION', vars.TF_VAR_ENVIRONMENT)] }}
      TF_VAR_vpc_name: ${{ secrets[format('TF_VAR_{0}_VPC_NAME', vars.TF_VAR_ENVIRONMENT)] }}
      TF_VAR_vpc_cidr: ${{ secrets[format('TF_VAR_{0}_CIDR_BLOCK', vars.TF_VAR_ENVIRONMENT)] }}
      TF_VAR_azs: ${{ secrets[format('TF_VAR_{0}_AZS', vars.TF_VAR_ENVIRONMENT)] }}
      TF_VAR_private_subnets: ${{ secrets[format('TF_VAR_{0}_PRIVATE_SUBNETS', vars.TF_VAR_ENVIRONMENT)] }}
      TF_VAR_public_subnets: ${{ secrets[format('TF_VAR_{0}_PUBLIC_SUBNETS', vars.TF_VAR_ENVIRONMENT)] }}
      TF_VAR_cluster_name: ${{ secrets[format('TF_VAR_{0}_CLUSTER_NAME', vars.TF_VAR_ENVIRONMENT)] }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials (Write)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets[format('TF_VAR_{0}_WRITE_ROLE_ARN', vars.TF_VAR_ENVIRONMENT)] }}
          aws-region: ${{ secrets[format('TF_VAR_{0}_REGION', vars.TF_VAR_ENVIRONMENT)] }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets[format('TF_VAR_{0}_S3_BUCKET_NAME', vars.TF_VAR_ENVIRONMENT)] }} \
            -backend-config="key=${{ secrets.TF_VAR_S3_BUCKET_KEY }}" \
            -backend-config="region=${{ secrets[format('TF_VAR_{0}_REGION', vars.TF_VAR_ENVIRONMENT)] }}" \
            -backend-config="encrypt=true" \
            -backend-config="dynamodb_table=${{ secrets[format('TF_VAR_{0}_DYNAMODB_TABLE_NAME', vars.TF_VAR_ENVIRONMENT)] }}"

      - name: Terraform Destroy
        run: terraform destroy -auto-approve