name: Terraform CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  terraform:
    if: github.repository == 'kcrane3576/eks-mlops'
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: terraform/networking
    env:
      TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
      TF_VAR_vpc_name: ${{ secrets.TF_VAR_VPC_NAME }}
      TF_VAR_vpc_cidr: ${{ secrets.TF_VAR_CIDR_BLOCK }}
      TF_VAR_azs: ${{ secrets.TF_VAR_AZS }}
      TF_VAR_private_subnets: ${{ secrets.TF_VAR_PRIVATE_SUBNETS }}
      TF_VAR_public_subnets: ${{ secrets.TF_VAR_PUBLIC_SUBNETS }}
      TF_VAR_enable_vpc_flow_logs: ${{ secrets.TF_VAR_ENABLE_VPC_FLOW_LOGS }}
      TF_VAR_tags: ${{ secrets.TF_VAR_TAGS }}
      TF_VAR_cluster_name: ${{ secrets.TF_VAR_CLUSTER_NAME }}
      TF_VAR_environment: ${{ secrets.TF_VAR_ENVIRONMENT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.TF_VAR_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.TF_VAR_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          TF_LOG=debug terraform init \
            -backend-config="bucket=${{ secrets.TF_VAR_S3_BUCKET_NAME }}" \
            -backend-config="key=${{ secrets.TF_VAR_S3_BUCKET_KEY }}" \
            -backend-config="region=${{ secrets.TF_VAR_REGION }}" \
            -backend-config="encrypt=true" \
            -backend-config="dynamodb_table=${{ secrets.TF_VAR_DYNAMODB_TABLE_NAME }}"

      - name: Terraform Validate
        if: github.ref != 'refs/heads/main'
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov Scan
        run: checkov -d . --framework terraform -o json --download-external-modules true || true

      - name: Install Graphviz and InfraMap
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz golang-go
          go install github.com/cycloidio/inframap@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH
          inframap --version  # Debug: Confirm installation

      - name: Generate InfraMap Diagram
        run: |
          ls -l *.tf  # Debug: Confirm .tf files present
          inframap generate --hcl . > diagram.dot || true  # Generate DOT from .tf files
          ls -l diagram.dot  # Debug: Confirm DOT exists
          dot -Tpng diagram.dot -o diagram.png || true  # Generate PNG
          ls -l diagram.png  # Debug: Confirm PNG exists

      - name: Upload Diagram Artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: vpc-diagram
          path: diagram.png
          if-no-files-found: warn

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
