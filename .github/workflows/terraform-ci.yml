name: Terraform CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  terraform:
    if: github.repository == vars.REPO_CAN_RUN_CI
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: terraform/modules/networking
    env:
      TF_VAR_region: ${{ secrets.TF_VAR_REGION }}
      TF_VAR_vpc_name: ${{ secrets.TF_VAR_VPC_NAME }}
      TF_VAR_vpc_cidr: ${{ secrets.TF_VAR_CIDR_BLOCK }}
      TF_VAR_azs: ${{ secrets.TF_VAR_AZS }}
      TF_VAR_private_subnets: ${{ secrets.TF_VAR_PRIVATE_SUBNETS }}
      TF_VAR_public_subnets: ${{ secrets.TF_VAR_PUBLIC_SUBNETS }}
      TF_VAR_enable_vpc_flow_logs: ${{ secrets.TF_VAR_ENABLE_VPC_FLOW_LOGS }}
      TF_VAR_tags: ${{ secrets.TF_VAR_TAGS }}
      TF_VAR_cluster_name: ${{ secrets.TF_VAR_CLUSTER_NAME }}
      TF_VAR_environment: ${{ secrets.TF_VAR_ENVIRONMENT }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials (Read)
        if: github.ref != 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.TF_VAR_READ_ROLE_ARN }}
          aws-region: ${{ secrets.TF_VAR_REGION }}

      - name: Configure AWS credentials (Write)
        if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.TF_VAR_WRITE_ROLE_ARN }}
          aws-region: ${{ secrets.TF_VAR_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          TF_LOG=debug terraform init \
            -backend-config="bucket=${{ secrets.TF_VAR_S3_BUCKET_NAME }}" \
            -backend-config="key=${{ secrets.TF_VAR_S3_BUCKET_KEY }}" \
            -backend-config="region=${{ secrets.TF_VAR_REGION }}" \
            -backend-config="encrypt=true" \
            -backend-config="dynamodb_table=${{ secrets.TF_VAR_DYNAMODB_TABLE_NAME }}"

      - name: Terraform Validate
        if: github.ref != 'refs/heads/main'
        run: terraform validate

      - name: Terraform Plan (with lock on main)
        if: github.ref == 'refs/heads/main'
        run: terraform plan

      - name: Terraform Plan (no lock on branches/PRs)
        if: github.ref != 'refs/heads/main'
        run: terraform plan -lock=false

      - name: Install Checkov
        run: pip install checkov

      - name: Run Checkov Scan
        run: checkov -d . --framework terraform -o json --download-external-modules true || true

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve
